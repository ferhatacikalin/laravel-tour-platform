## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Tour Management'
description: |-

  APIs for managing tours
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/tours
    metadata:
      groupName: 'Tour Management'
      groupDescription: |-

        APIs for managing tours
      subgroup: ''
      subgroupDescription: ''
      title: 'List Tours'
      description: 'Get a paginated list of tours. You can filter tours by various criteria.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      start_date:
        name: start_date
        description: 'date Filter tours starting from this date.'
        required: false
        example: '2024-02-01'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      end_date:
        name: end_date
        description: 'date Filter tours ending before this date.'
        required: false
        example: '2024-03-01'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      location:
        name: location
        description: 'Filter tours by location (partial match).'
        required: false
        example: Paris
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      min_price:
        name: min_price
        description: 'numeric Filter tours with price greater than or equal to this value.'
        required: false
        example: '100'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      max_price:
        name: max_price
        description: 'numeric Filter tours with price less than or equal to this value.'
        required: false
        example: '1000'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      search:
        name: search
        description: 'Search in tour names and descriptions.'
        required: false
        example: mountain
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      page:
        name: page
        description: 'Page number for pagination.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      start_date: '2024-02-01'
      end_date: '2024-03-01'
      location: Paris
      min_price: '100'
      max_price: '1000'
      search: mountain
      page: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "status": "success",
           "message": "Tours retrieved successfully",
           "data": {
             "current_page": 1,
             "data": [
               {
                 "id": 1,
                 "name": "Paris City Tour",
                 "description": "Explore the beautiful city of Paris",
                 "location": "Paris, France",
                 "start_date": "2024-03-01 10:00:00",
                 "end_date": "2024-03-03 18:00:00",
                 "price": "299.99",
                 "user_id": 1,
                 "created_at": "2024-01-24T19:26:20.000000Z",
                 "updated_at": "2024-01-24T19:26:20.000000Z"
               }
             ],
             "total": 60,
             "per_page": 10,
             "last_page": 6
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/tours/{id}'
    metadata:
      groupName: 'Tour Management'
      groupDescription: |-

        APIs for managing tours
      subgroup: ''
      subgroupDescription: ''
      title: 'Show Tour'
      description: 'Get detailed information about a specific tour.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the tour.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "status": "success",
           "message": "Tour details retrieved successfully",
           "data": {
             "id": 1,
             "name": "Paris City Tour",
             "description": "Explore the beautiful city of Paris",
             "location": "Paris, France",
             "start_date": "2024-03-01 10:00:00",
             "end_date": "2024-03-03 18:00:00",
             "price": "299.99",
             "user_id": 1,
             "created_at": "2024-01-24T19:26:20.000000Z",
             "updated_at": "2024-01-24T19:26:20.000000Z"
           }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "status": "error",
           "message": "Tour not found",
           "data": {},
           "code": "404001"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/tours
    metadata:
      groupName: 'Tour Management'
      groupDescription: |-

        APIs for managing tours
      subgroup: ''
      subgroupDescription: ''
      title: 'Create Tour'
      description: 'Create a new tour. Only authenticated tour operators can create tours.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the tour.'
        required: true
        example: 'Paris City Tour'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'The detailed description of the tour.'
        required: true
        example: 'Explore the beautiful city of Paris with our experienced guides.'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      location:
        name: location
        description: 'The location where the tour takes place.'
        required: true
        example: 'Paris, France'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      start_date:
        name: start_date
        description: 'The start date and time of the tour.'
        required: true
        example: '2024-03-01 10:00:00'
        type: datetime
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      end_date:
        name: end_date
        description: 'The end date and time of the tour. Must be after start_date.'
        required: true
        example: '2024-03-03 18:00:00'
        type: datetime
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      price:
        name: price
        description: 'The price of the tour. Must be between 0 and 999999.99.'
        required: true
        example: '299.99'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Paris City Tour'
      description: 'Explore the beautiful city of Paris with our experienced guides.'
      location: 'Paris, France'
      start_date: '2024-03-01 10:00:00'
      end_date: '2024-03-03 18:00:00'
      price: '299.99'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
           "status": "success",
           "message": "Tour created successfully",
           "data": {
             "id": 1,
             "name": "Paris City Tour",
             "description": "Explore the beautiful city of Paris with our experienced guides.",
             "location": "Paris, France",
             "start_date": "2024-03-01 10:00:00",
             "end_date": "2024-03-03 18:00:00",
             "price": "299.99",
             "user_id": 1,
             "created_at": "2024-01-24T19:26:20.000000Z",
             "updated_at": "2024-01-24T19:26:20.000000Z"
           }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
           "status": "error",
           "message": "Forbidden",
           "data": {},
           "code": "403"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
           "status": "error",
           "message": "Tour name is required",
           "data": {},
           "code": "422001"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer {token}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/tours/{id}'
    metadata:
      groupName: 'Tour Management'
      groupDescription: |-

        APIs for managing tours
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Tour'
      description: 'Update an existing tour. Only the tour operator who created the tour or an admin can update it.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the tour.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the tour.'
        required: false
        example: 'Updated Paris City Tour'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'The detailed description of the tour.'
        required: false
        example: 'Updated tour description'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      location:
        name: location
        description: 'The location where the tour takes place.'
        required: false
        example: 'Paris, France'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      start_date:
        name: start_date
        description: 'The start date and time of the tour.'
        required: false
        example: '2024-03-01 10:00:00'
        type: datetime
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      end_date:
        name: end_date
        description: 'The end date and time of the tour. Must be after start_date.'
        required: false
        example: '2024-03-03 18:00:00'
        type: datetime
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      price:
        name: price
        description: 'The price of the tour. Must be between 0 and 999999.99.'
        required: false
        example: '349.99'
        type: numeric
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Updated Paris City Tour'
      description: 'Updated tour description'
      location: 'Paris, France'
      start_date: '2024-03-01 10:00:00'
      end_date: '2024-03-03 18:00:00'
      price: '349.99'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "status": "success",
           "message": "Tour updated successfully",
           "data": {
             "id": 1,
             "name": "Updated Paris City Tour",
             "description": "Updated tour description",
             "location": "Paris, France",
             "start_date": "2024-03-01 10:00:00",
             "end_date": "2024-03-03 18:00:00",
             "price": "349.99",
             "user_id": 1,
             "created_at": "2024-01-24T19:26:20.000000Z",
             "updated_at": "2024-01-24T19:30:20.000000Z"
           }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
           "status": "error",
           "message": "Forbidden",
           "data": {},
           "code": "403"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "status": "error",
           "message": "Tour not found",
           "data": {},
           "code": "404001"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
           "status": "error",
           "message": "Tour price cannot exceed 999999.99",
           "data": {},
           "code": "422015"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer {token}'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/tours/{id}'
    metadata:
      groupName: 'Tour Management'
      groupDescription: |-

        APIs for managing tours
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete Tour'
      description: 'Delete an existing tour. Only the tour operator who created the tour or an admin can delete it.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the tour.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "status": "success",
           "message": "Tour deleted successfully",
           "data": {}
          }
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: |-
          {
           "status": "error",
           "message": "Forbidden",
           "data": {},
           "code": "403"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "status": "error",
           "message": "Tour not found",
           "data": {},
           "code": "404001"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer {token}'
    controller: null
    method: null
    route: null
    custom: []
