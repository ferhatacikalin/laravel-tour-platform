name: Authentication
description: |-

  APIs for managing authentication
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/auth/login
    metadata:
      groupName: Authentication
      groupDescription: |-

        APIs for managing authentication
      subgroup: ''
      subgroupDescription: ''
      title: Login
      description: 'Authenticate a user and return an access token.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email of the user.'
        required: true
        example: user@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'The password of the user. Minimum length: 5 characters.'
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: user@example.com
      password: password123
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "status": true,
           "message": "COMMON_TOKEN_GET_SUCCESS",
           "data": {
             "access_token": "1|laravel_sanctum_token",
             "token_type": "Bearer",
             "expires_in": 1234567890
           }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
           "status": false,
           "message": "COMMON_AUTH_EMAIL_EMPTY"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/auth/register
    metadata:
      groupName: Authentication
      groupDescription: |-

        APIs for managing authentication
      subgroup: ''
      subgroupDescription: ''
      title: Register
      description: 'Register a new user and return an access token.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the user.'
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: 'The email of the user.'
        required: true
        example: user@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'The password of the user. Minimum length: 8 characters.'
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      email: user@example.com
      password: password123
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "status": true,
           "message": "COMMON_TOKEN_GET_SUCCESS",
           "data": {
             "access_token": "1|laravel_sanctum_token",
             "token_type": "Bearer",
             "expires_in": 1234567890
           }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
           "status": false,
           "message": "COMMON_AUTH_EMAIL_EMPTY"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/auth/me
    metadata:
      groupName: Authentication
      groupDescription: |-

        APIs for managing authentication
      subgroup: ''
      subgroupDescription: ''
      title: 'Get User Profile'
      description: "Get the authenticated user's profile information."
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "status": true,
           "message": "COMMON_HTTP_OK",
           "data": {
             "id": 1,
             "name": "John Doe",
             "email": "user@example.com"
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer {token}'
    controller: null
    method: null
    route: null
    custom: []
