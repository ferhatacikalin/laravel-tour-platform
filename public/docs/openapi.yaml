openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  /api/v1/auth/login:
    post:
      summary: Login
      operationId: login
      description: 'Authenticate a user and return an access token.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  message: COMMON_TOKEN_GET_SUCCESS
                  data:
                    access_token: 1|laravel_sanctum_token
                    token_type: Bearer
                    expires_in: 1234567890
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: COMMON_TOKEN_GET_SUCCESS
                  data:
                    type: object
                    properties:
                      access_token:
                        type: string
                        example: 1|laravel_sanctum_token
                      token_type:
                        type: string
                        example: Bearer
                      expires_in:
                        type: integer
                        example: 1234567890
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  message: COMMON_AUTH_EMAIL_EMPTY
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: COMMON_AUTH_EMAIL_EMPTY
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'The email of the user.'
                  example: user@example.com
                  nullable: false
                password:
                  type: string
                  description: 'The password of the user. Minimum length: 5 characters.'
                  example: password123
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/v1/auth/register:
    post:
      summary: Register
      operationId: register
      description: 'Register a new user and return an access token.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  message: COMMON_TOKEN_GET_SUCCESS
                  data:
                    access_token: 1|laravel_sanctum_token
                    token_type: Bearer
                    expires_in: 1234567890
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: COMMON_TOKEN_GET_SUCCESS
                  data:
                    type: object
                    properties:
                      access_token:
                        type: string
                        example: 1|laravel_sanctum_token
                      token_type:
                        type: string
                        example: Bearer
                      expires_in:
                        type: integer
                        example: 1234567890
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  message: COMMON_AUTH_EMAIL_EMPTY
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: COMMON_AUTH_EMAIL_EMPTY
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the user.'
                  example: 'John Doe'
                  nullable: false
                email:
                  type: string
                  description: 'The email of the user.'
                  example: user@example.com
                  nullable: false
                password:
                  type: string
                  description: 'The password of the user. Minimum length: 8 characters.'
                  example: password123
                  nullable: false
              required:
                - name
                - email
                - password
      security: []
  /api/v1/auth/me:
    post:
      summary: 'Get User Profile'
      operationId: getUserProfile
      description: "Get the authenticated user's profile information."
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  message: COMMON_HTTP_OK
                  data:
                    id: 1
                    name: 'John Doe'
                    email: user@example.com
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: COMMON_HTTP_OK
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'John Doe'
                      email:
                        type: string
                        example: user@example.com
      tags:
        - Authentication
  /api/v1/tours:
    get:
      summary: 'List Tours'
      operationId: listTours
      description: 'Get a paginated list of tours. You can filter tours by various criteria.'
      parameters:
        -
          in: query
          name: start_date
          description: 'date Filter tours starting from this date.'
          example: '2024-02-01'
          required: false
          schema:
            type: string
            description: 'date Filter tours starting from this date.'
            example: '2024-02-01'
            nullable: false
        -
          in: query
          name: end_date
          description: 'date Filter tours ending before this date.'
          example: '2024-03-01'
          required: false
          schema:
            type: string
            description: 'date Filter tours ending before this date.'
            example: '2024-03-01'
            nullable: false
        -
          in: query
          name: location
          description: 'Filter tours by location (partial match).'
          example: Paris
          required: false
          schema:
            type: string
            description: 'Filter tours by location (partial match).'
            example: Paris
            nullable: false
        -
          in: query
          name: min_price
          description: 'numeric Filter tours with price greater than or equal to this value.'
          example: '100'
          required: false
          schema:
            type: string
            description: 'numeric Filter tours with price greater than or equal to this value.'
            example: '100'
            nullable: false
        -
          in: query
          name: max_price
          description: 'numeric Filter tours with price less than or equal to this value.'
          example: '1000'
          required: false
          schema:
            type: string
            description: 'numeric Filter tours with price less than or equal to this value.'
            example: '1000'
            nullable: false
        -
          in: query
          name: search
          description: 'Search in tour names and descriptions.'
          example: mountain
          required: false
          schema:
            type: string
            description: 'Search in tour names and descriptions.'
            example: mountain
            nullable: false
        -
          in: query
          name: page
          description: 'Page number for pagination.'
          example: 1
          required: false
          schema:
            type: integer
            description: 'Page number for pagination.'
            example: 1
            nullable: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  message: TOUR_LIST_SUCCESS
                  data:
                    current_page: 1
                    data:
                      -
                        id: 1
                        name: 'Paris City Tour'
                        description: 'Explore the beautiful city of Paris'
                        location: 'Paris, France'
                        start_date: '2024-03-01 10:00:00'
                        end_date: '2024-03-03 18:00:00'
                        price: '299.99'
                        user_id: 1
                        created_at: '2024-01-24T19:26:20.000000Z'
                        updated_at: '2024-01-24T19:26:20.000000Z'
                    total: 60
                    per_page: 10
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: TOUR_LIST_SUCCESS
                  data:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      data:
                        type: array
                        example:
                          -
                            id: 1
                            name: 'Paris City Tour'
                            description: 'Explore the beautiful city of Paris'
                            location: 'Paris, France'
                            start_date: '2024-03-01 10:00:00'
                            end_date: '2024-03-03 18:00:00'
                            price: '299.99'
                            user_id: 1
                            created_at: '2024-01-24T19:26:20.000000Z'
                            updated_at: '2024-01-24T19:26:20.000000Z'
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            name:
                              type: string
                              example: 'Paris City Tour'
                            description:
                              type: string
                              example: 'Explore the beautiful city of Paris'
                            location:
                              type: string
                              example: 'Paris, France'
                            start_date:
                              type: string
                              example: '2024-03-01 10:00:00'
                            end_date:
                              type: string
                              example: '2024-03-03 18:00:00'
                            price:
                              type: string
                              example: '299.99'
                            user_id:
                              type: integer
                              example: 1
                            created_at:
                              type: string
                              example: '2024-01-24T19:26:20.000000Z'
                            updated_at:
                              type: string
                              example: '2024-01-24T19:26:20.000000Z'
                      total:
                        type: integer
                        example: 60
                      per_page:
                        type: integer
                        example: 10
      tags:
        - 'Tour Management'
      security: []
    post:
      summary: 'Create Tour'
      operationId: createTour
      description: 'Create a new tour. Only authenticated tour operators can create tours.'
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  message: TOUR_CREATE_SUCCESS
                  data:
                    id: 1
                    name: 'Paris City Tour'
                    description: 'Explore the beautiful city of Paris with our experienced guides.'
                    location: 'Paris, France'
                    start_date: '2024-03-01 10:00:00'
                    end_date: '2024-03-03 18:00:00'
                    price: '299.99'
                    user_id: 1
                    created_at: '2024-01-24T19:26:20.000000Z'
                    updated_at: '2024-01-24T19:26:20.000000Z'
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: TOUR_CREATE_SUCCESS
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Paris City Tour'
                      description:
                        type: string
                        example: 'Explore the beautiful city of Paris with our experienced guides.'
                      location:
                        type: string
                        example: 'Paris, France'
                      start_date:
                        type: string
                        example: '2024-03-01 10:00:00'
                      end_date:
                        type: string
                        example: '2024-03-03 18:00:00'
                      price:
                        type: string
                        example: '299.99'
                      user_id:
                        type: integer
                        example: 1
                      created_at:
                        type: string
                        example: '2024-01-24T19:26:20.000000Z'
                      updated_at:
                        type: string
                        example: '2024-01-24T19:26:20.000000Z'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  message: TOUR_NAME_REQUIRED
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: TOUR_NAME_REQUIRED
      tags:
        - 'Tour Management'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the tour.'
                  example: 'Paris City Tour'
                  nullable: false
                description:
                  type: string
                  description: 'The detailed description of the tour.'
                  example: 'Explore the beautiful city of Paris with our experienced guides.'
                  nullable: false
                location:
                  type: string
                  description: 'The location where the tour takes place.'
                  example: 'Paris, France'
                  nullable: false
                start_date:
                  type: datetime
                  description: 'The start date and time of the tour.'
                  example: '2024-03-01 10:00:00'
                  nullable: false
                end_date:
                  type: datetime
                  description: 'The end date and time of the tour. Must be after start_date.'
                  example: '2024-03-03 18:00:00'
                  nullable: false
                price:
                  type: numeric
                  description: 'The price of the tour. Must be between 0 and 999999.99.'
                  example: '299.99'
                  nullable: false
              required:
                - name
                - description
                - location
                - start_date
                - end_date
                - price
  '/api/v1/tours/{id}':
    get:
      summary: 'Show Tour'
      operationId: showTour
      description: 'Get detailed information about a specific tour.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  message: TOUR_SHOW_SUCCESS
                  data:
                    id: 1
                    name: 'Paris City Tour'
                    description: 'Explore the beautiful city of Paris'
                    location: 'Paris, France'
                    start_date: '2024-03-01 10:00:00'
                    end_date: '2024-03-03 18:00:00'
                    price: '299.99'
                    user_id: 1
                    created_at: '2024-01-24T19:26:20.000000Z'
                    updated_at: '2024-01-24T19:26:20.000000Z'
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: TOUR_SHOW_SUCCESS
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Paris City Tour'
                      description:
                        type: string
                        example: 'Explore the beautiful city of Paris'
                      location:
                        type: string
                        example: 'Paris, France'
                      start_date:
                        type: string
                        example: '2024-03-01 10:00:00'
                      end_date:
                        type: string
                        example: '2024-03-03 18:00:00'
                      price:
                        type: string
                        example: '299.99'
                      user_id:
                        type: integer
                        example: 1
                      created_at:
                        type: string
                        example: '2024-01-24T19:26:20.000000Z'
                      updated_at:
                        type: string
                        example: '2024-01-24T19:26:20.000000Z'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  message: TOUR_NOT_FOUND
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: TOUR_NOT_FOUND
      tags:
        - 'Tour Management'
      security: []
    put:
      summary: 'Update Tour'
      operationId: updateTour
      description: 'Update an existing tour. Only the tour operator who created the tour can update it.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  message: TOUR_UPDATE_SUCCESS
                  data:
                    id: 1
                    name: 'Updated Paris City Tour'
                    description: 'Updated tour description'
                    location: 'Paris, France'
                    start_date: '2024-03-01 10:00:00'
                    end_date: '2024-03-03 18:00:00'
                    price: '349.99'
                    user_id: 1
                    created_at: '2024-01-24T19:26:20.000000Z'
                    updated_at: '2024-01-24T19:30:20.000000Z'
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: TOUR_UPDATE_SUCCESS
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'Updated Paris City Tour'
                      description:
                        type: string
                        example: 'Updated tour description'
                      location:
                        type: string
                        example: 'Paris, France'
                      start_date:
                        type: string
                        example: '2024-03-01 10:00:00'
                      end_date:
                        type: string
                        example: '2024-03-03 18:00:00'
                      price:
                        type: string
                        example: '349.99'
                      user_id:
                        type: integer
                        example: 1
                      created_at:
                        type: string
                        example: '2024-01-24T19:26:20.000000Z'
                      updated_at:
                        type: string
                        example: '2024-01-24T19:30:20.000000Z'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  message: UNAUTHORIZED_ACTION
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: UNAUTHORIZED_ACTION
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  message: TOUR_NOT_FOUND
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: TOUR_NOT_FOUND
      tags:
        - 'Tour Management'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the tour.'
                  example: 'Updated Paris City Tour'
                  nullable: false
                description:
                  type: string
                  description: 'The detailed description of the tour.'
                  example: 'Updated tour description'
                  nullable: false
                location:
                  type: string
                  description: 'The location where the tour takes place.'
                  example: 'Paris, France'
                  nullable: false
                start_date:
                  type: datetime
                  description: 'The start date and time of the tour.'
                  example: '2024-03-01 10:00:00'
                  nullable: false
                end_date:
                  type: datetime
                  description: 'The end date and time of the tour. Must be after start_date.'
                  example: '2024-03-03 18:00:00'
                  nullable: false
                price:
                  type: numeric
                  description: 'The price of the tour. Must be between 0 and 999999.99.'
                  example: '349.99'
                  nullable: false
    delete:
      summary: 'Delete Tour'
      operationId: deleteTour
      description: 'Delete an existing tour. Only the tour operator who created the tour can delete it.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  message: TOUR_DELETE_SUCCESS
                properties:
                  status:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: TOUR_DELETE_SUCCESS
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  message: UNAUTHORIZED_ACTION
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: UNAUTHORIZED_ACTION
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  message: TOUR_NOT_FOUND
                properties:
                  status:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: TOUR_NOT_FOUND
      tags:
        - 'Tour Management'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the tour.'
        example: nihil
        required: true
        schema:
          type: string
      -
        in: path
        name: tour
        description: 'The ID of the tour.'
        example: 1
        required: true
        schema:
          type: integer
tags:
  -
    name: Authentication
    description: "\nAPIs for managing authentication"
  -
    name: 'Tour Management'
    description: "\nAPIs for managing tours"
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by logging in through the POST /api/v1/auth/login endpoint.'
security:
  -
    default: []
